name: Build FbsDumperv2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.runner }}
    
    strategy:
      matrix:
        include:
          - os: windows
            arch: x86_64
            runner: windows-latest
            rid: win-x64
          - os: macos
            arch: x86_64
            runner: macos-15
            rid: osx-x64
          - os: macos
            arch: aarch64
            runner: macos-15
            rid: osx-arm64
          - os: linux
            arch: x86_64
            runner: ubuntu-latest
            rid: linux-x64
          - os: linux
            arch: aarch64
            runner: ubuntu-latest
            rid: linux-arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Publish
      run: dotnet publish --configuration Release --runtime ${{ matrix.rid }} --self-contained --output ./publish/${{ matrix.rid }}

    - name: Create release archive (Windows)
      if: matrix.os == 'windows'
      run: |
        cd publish
        Compress-Archive -Path ${{ matrix.rid }}/* -DestinationPath ../${{ github.event.repository.name }}-${{ matrix.rid }}.zip
    - name: Create release archive (Unix)
      if: matrix.os != 'windows'
      run: |
        cd publish
        zip -r ../${{ github.event.repository.name }}-${{ matrix.rid }}.zip ${{ matrix.rid }}/*
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-${{ matrix.rid }}
        path: ${{ github.event.repository.name }}-${{ matrix.rid }}.zip
